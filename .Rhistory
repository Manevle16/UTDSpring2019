n
n <- 300
n
names(temps) <- c('Mon','Tue','Wed','Thu','Fri')
temps <- c(72,71,68,65,75,71)
temps
names(temps) <- c('Mon','Tue','Wed','Thu','Fri')
temps
n
temps <- c'Mon','Tue','Wed','Thu','Fri')
n
temps <- c('Mon','Tue','Wed','Thu','Fri')
temps
names(temps) <- c(72,71,68,65,75,71)
n
temps <- c('Mon','Tue','Wed','Thu','Fri')
temps
names(temps) <- c(72,71,68,65,75)
temps
n
temps <- c('Mon','Tue','Wed','Thu','Fri')
temps
temps
temps[1]
temps[1]
temps[2:4]
temps[1]
temps[2:]
temps[1]
temps[2,]
n <- 1:10
n
matrix(n)
matrix(n)
matrix(n)
matrix(n,nrow=2)
matrix(1:12, byrow = FALSE, nrow=4)
matrix(1:12, byrow = FALSE, nrow=4)
matrix(1:12, byrow = TRUE, nrow=4)
?matrix
matrix(1:12, byrow = FALSE, nrow=4) #Creates matrix with 12 values and 4 rows which counts by column
mat <- matrix(1:12, byrow = TRUE, nrow=4) #Creates matrix with 12 values and 4 rows which counts by row
mat <- matrix(1:12, byrow = TRUE, nrow=4) #Creates matrix with 12 values and 4 rows which counts by row
view(mat)
view(mat)
View(mat)
mat*mat
mat%*%mat
mat1 <- matrix(1:12, byrow = FALSE, nrow=3) #Creates matrix with 12 values and 4 rows which counts by column
mat2 <- matrix(1:12, byrow = TRUE, nrow=4) #Creates matrix with 12 values and 4 rows which counts by row
mat1*mat1
mat1%*%mat2
View(mat1)
mat1[1,]
mat1[1:3,]
mat1[1:3,]
mat1[1,1:3]
mat1[1,1:3]
data.frame(mat1)
state.x77
state.x77
states <- state.x77
View(states)
u <- USPersonalExpenditure
u <- USPersonalExpenditure
w <- women
head(states)
View(w)
setwd("C:/Users/Manev/github/Manevle16/UTDSpring2019HW")
library(dplyr)
head(mtcars)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
head(mtcars)
head(mtcars)
head(mtcars)
mtcars
df <- data.frame(mtcars)
baseDF <- data.frame(mtcars)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
subset(df, mpg > 20 & cyl > 6)
colnames(baseDF)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
subset(df, "mpg" > 20 & "cyl" > 6)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
subset(baseDF, mpg > 20 & cyl > 6)
df <- data.frame(mtcars)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
subset(df, mpg > 20 & cyl > 6)
View(df)
View(df)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
subset(df, mpg > 20 & cyl >= 6)
# 2. Reorder the Data Frame by cyl first, then by descending wt.
order(df["cyl"])
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df[sorted(df["cyl"])]
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df[sorted(df["cyl"]),]
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df[order(df["cyl"]),]
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df[order(df["cyl"])]
# 2. Reorder the Data Frame by cyl first, then by descending wt.
order(-df[order(df["cyl"]),]["wt"])
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df[order(-df[order(df["cyl"]),]["wt"]),]
# 2. Reorder the Data Frame by cyl first, then by descending wt.
df <- df[order(df["cyl"]),]
View(df)
df <- df[order(-df["wt"]),]
View(df)
View(df)
# 3. Select the columns mpg and hp
df["mpg"]
# 3. Select the columns mpg and hp
df["mpg", "hp"]
# 3. Select the columns mpg and hp
df["mpg" & "hp"]
# 3. Select the columns mpg and hp
df[,"mpg", "hp"]
# 3. Select the columns mpg and hp
df[, c("mpg", "hp")]
# 4. Select the distinct values of the gear column.
df[unique(df["gear"]),]
# 4. Select the distinct values of the gear column.
df[unique(df, "gear"),]
# 4. Select the distinct values of the gear column.
df[unique(df, incomparables = FALSE, "gear"),]
# 4. Select the distinct values of the gear column.
df[unique(df, incomparables = FALSE, fromLast = FALSE, "gear"), ]
# 4. Select the distinct values of the gear column.
unique(df)
# 4. Select the distinct values of the gear column.
unique(df["gear"])
# 4. Select the distinct values of the gear column.
distinct(df["gear"])
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
filter(df, mpg > 20 & cyl > 6)
# 1. Return rows of cars that have an mpg value greater than 20 and 6 cylinders.
filter(df, mpg > 15 & cyl > 6)
# 2. Reorder the Data Frame by cyl first, then by descending wt.
arrange((df, cyl, desc(wt)))
# 2. Reorder the Data Frame by cyl first, then by descending wt.
arrange(df, cyl, desc(wt))
# 3. Select the columns mpg and hp
df[, c("mpg", "hp")]
# 4. Select the distinct values of the gear column.
distinct(df["gear"])
# 4. Select the distinct values of the gear column.
distinct(df["mpg"])
# 5. Create a new column called "Performance" which is calculated by hp
#    divided by wt.
transmute(df, Performance = hp/wt)
# 5. Create a new column called "Performance" which is calculated by hp
#    divided by wt.
df2 = transmute(df, Performance = hp/wt)
# 5. Create a new column called "Performance" which is calculated by hp
#    divided by wt.
merge(df, transmute(df, Performance = hp/wt))
205/5.250
175/3.44
# 5. Create a new column called "Performance" which is calculated by hp
#    divided by wt.
transmute(df, Performance = hp/wt)
# 5. Create a new column called "Performance" which is calculated by hp
#    divided by wt.
rownames(df)
rownames(transmute(df, Performance = hp/wt))
df %% transmute(df, Performance = hp/wt)
df %% transmute(df, Performance = hp/wt) && pull
df %% transmute(Performance = hp/wt)
mutate(df, Performance = hp/wt)
